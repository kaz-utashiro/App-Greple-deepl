=encoding utf-8

=head1 NAME

App::Greple::xlate - модуль поддержки перевода для greple

=head1 SYNOPSIS

    greple -Mxlate -e ENGINE --xlate pattern target-file

    greple -Mxlate::deepl --xlate pattern target-file

=head1 VERSION

Version 0.29

=head1 DESCRIPTION

B<Greple> Модуль B<xlate> находит нужные текстовые блоки и заменяет их переведенным текстом. В настоящее время в качестве движка используются модули DeepL (F<deepl.pm>) и ChatGPT (F<gpt3.pm>).

Если вы хотите перевести обычные текстовые блоки в документе, написанном в стиле Perl's pod, используйте команду B<greple> с модулем C<xlate::deepl> и C<perl> следующим образом:

    greple -Mxlate::deepl -Mperl --pod --re '^(\w.*\n)+' --all foo.pm

В этой команде строка шаблона C<^(\w.*\n)+> означает последовательные строки, начинающиеся с буквы или цифры. Эта команда показывает выделенную область, которую нужно перевести. Опция B<--all> используется для вывода всего текста.

=for html <p>
<img width="750" src="https://raw.githubusercontent.com/kaz-utashiro/App-Greple-xlate/main/images/select-area.png">
</p>

Затем добавьте опцию C<--xlate>, чтобы перевести выбранную область. Затем он найдет нужные разделы и заменит их выводом команды B<deepl>.

По умолчанию оригинальный и переведенный текст выводится в формате "конфликтного маркера", совместимого с L<git(1)>. Используя формат C<ifdef>, вы можете легко получить нужную часть с помощью команды L<unifdef(1)>. Формат вывода можно указать с помощью опции B<--xlate-format>.

=for html <p>
<img width="750" src="https://raw.githubusercontent.com/kaz-utashiro/App-Greple-xlate/main/images/format-conflict.png">
</p>

Если вы хотите перевести весь текст, используйте опцию B<--match-all>. Это сокращение для указания шаблона C<(?s).+>, который соответствует всему тексту.

=head1 OPTIONS

=over 7

=item B<--xlate>

=item B<--xlate-color>

=item B<--xlate-fold>

=item B<--xlate-fold-width>=I<n> (Default: 70)

Вызывайте процесс перевода для каждой совпавшей области.

Без этой опции B<greple> ведет себя как обычная команда поиска. Таким образом, вы можете проверить, какая часть файла будет подвергаться переводу, прежде чем вызывать фактическую работу.

Результат команды выводится в стандартный вывод, поэтому, при необходимости, перенаправьте его в файл или рассмотрите использование модуля L<App::Greple::update>.

Опция B<--xlate> вызывает опцию B<--xlate-color> с опцией B<--color=never>.

С опцией B<--xlate-fold> преобразованный текст складывается с указанной шириной. Ширина по умолчанию - 70 и может быть установлена с помощью опции B<--xlate-fold-width>. Четыре столбца зарезервированы для операции run-in, поэтому каждая строка может содержать не более 74 символов.

=item B<--xlate-engine>=I<engine>

Указывает используемый движок перевода. Если вы указываете модуль движка напрямую, например, C<-Mxlate::deepl>, вам не нужно использовать эту опцию.

=item B<--xlate-labor>

=item B<--xlabor>

Вместо вызова движка перевода ожидается, что вы будете работать с ним. После подготовки текста для перевода, они копируются в буфер обмена. Ожидается, что вы вставите их в форму, скопируете результат в буфер обмена и нажмете Enter.

=item B<--xlate-to> (Default: C<EN-US>)

Укажите целевой язык. Вы можете получить доступные языки с помощью команды C<deepl languages>, когда используется движок B<DeepL>.

=item B<--xlate-format>=I<format> (Default: C<conflict>)

Укажите формат вывода для оригинального и переведенного текста.

=over 4

=item B<conflict>, B<cm>

Оригинальный и преобразованный тексты печатаются в формате маркера конфликта L<git(1)>.

    <<<<<<< ORIGINAL
    original text
    =======
    translated Japanese text
    >>>>>>> JA

Вы можете восстановить исходный файл с помощью следующей команды L<sed(1)>.

    sed -e '/^<<<<<<< /d' -e '/^=======$/,/^>>>>>>> /d'

=item B<ifdef>

Оригинальный и преобразованный тексты печатаются в формате L<cpp(1)> C<#ifdef>.

    #ifdef ORIGINAL
    original text
    #endif
    #ifdef JA
    translated Japanese text
    #endif

Вы можете получить только японский текст с помощью команды B<unifdef>:

    unifdef -UORIGINAL -DJA foo.ja.pm

=item B<space>

Оригинальный и преобразованный тексты печатаются, разделенные одной пустой строкой.

=item B<xtxt>

Если формат - C<xtxt> (переведенный текст) или неизвестный, будет выведен только переведенный текст.

=back

=item B<--xlate-maxlen>=I<chars> (Default: 0)

Переведите следующий текст на русский язык, построчно.

=item B<-->[B<no->]B<xlate-progress> (Default: True)

Смотрите результат перевода в реальном времени в выводе STDERR.

=item B<--match-all>

Установите весь текст файла в качестве целевой области.

=back

=head1 CACHE OPTIONS

Модуль B<xlate> может хранить кэшированный текст перевода для каждого файла и считывать его перед выполнением, чтобы устранить накладные расходы на запросы к серверу. Стратегия кэширования по умолчанию C<auto> поддерживает кэширование данных только при наличии файла кэша для целевого файла.

=over 7

=item --cache-clear

Опцию B<--cache-clear> можно использовать для инициирования управления кэшем или обновления всех существующих данных кэша. После выполнения с этой опцией будет создан новый файл кэша, если он не существует, и затем автоматически поддерживаться.

=item --xlate-cache=I<strategy>

=over 4

=item C<auto> (Default)

Поддерживайте файл кэша, если он существует.

=item C<create>

Создайте пустой файл кэша и выйдите.

=item C<always>, C<yes>, C<1>

Поддерживайте кэш в любом случае, если цель - обычный файл.

=item C<clear>

Сначала очистите данные кэша.

=item C<never>, C<no>, C<0>

Никогда не используйте файл кэша, даже если он существует.

=item C<accumulate>

По умолчанию неиспользуемые данные удаляются из файла кэша. Если вы не хотите удалять их и хранить в файле, используйте C<accumulate>.

=back

=back

=head1 COMMAND LINE INTERFACE

Вы можете легко использовать этот модуль из командной строки, используя команду C<xlate>, включенную в репозиторий. См. справочную информацию C<xlate> для использования.

=head1 EMACS

Загрузите файл F<xlate.el>, включенный в репозиторий, чтобы использовать команду C<xlate> из редактора Emacs. Функция C<xlate-region> переводит указанную область. Язык по умолчанию - C<EN-US>, и вы можете указать язык, вызывая его с аргументом-префиксом.

=head1 ENVIRONMENT

=over 7

=item DEEPL_AUTH_KEY

Установите ваш ключ аутентификации для сервиса DeepL.

=item OPENAI_API_KEY

Ключ аутентификации OpenAI.

=back

=head1 INSTALL

=head2 CPANMINUS

    $ cpanm App::Greple::xlate

=head2 TOOLS

Необходимо установить командные инструменты для DeepL и ChatGPT.

L<https://github.com/DeepLcom/deepl-python>

L<https://github.com/tecolicom/App-gpty>

=head1 SEE ALSO

L<App::Greple::xlate>

L<App::Greple::xlate::deepl>

L<App::Greple::xlate::gpt3>

L<https://hub.docker.com/r/tecolicom/xlate>

=over 7

=item L<https://github.com/DeepLcom/deepl-python>

Библиотека DeepL для Python и командная строка.

=item L<https://github.com/openai/openai-python>

Библиотека OpenAI для Python

=item L<https://github.com/tecolicom/App-gpty>

Командный интерфейс OpenAI

=item L<App::Greple>

См. руководство по B<greple> для получения подробной информации о шаблоне целевого текста. Используйте опции B<--inside>, B<--outside>, B<--include>, B<--exclude>, чтобы ограничить область совпадения.

=item L<App::Greple::update>

Вы можете использовать модуль C<-Mupdate>, чтобы изменять файлы на основе результата команды B<greple>.

=item L<App::sdif>

Используйте B<sdif>, чтобы показать формат маркера конфликта рядом с опцией B<-V>.

=back

=head2 ARTICLES

=over 2

=item * L<https://qiita.com/kaz-utashiro/items/1c1a51a4591922e18250>

Модуль Greple для перевода и замены только необходимых частей с использованием API DeepL (на японском)

=item * L<https://qiita.com/kaz-utashiro/items/a5e19736416ca183ecf6>

Генерация документов на 15 языках с помощью модуля DeepL API (на японском)

=item * L<https://qiita.com/kaz-utashiro/items/1b9e155d6ae0620ab4dd>

Автоматическая среда Docker для перевода с использованием API DeepL (на японском)

=back

=head1 AUTHOR

Kazumasa Utashiro

=head1 LICENSE

Copyright © 2023-2024 Kazumasa Utashiro.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
