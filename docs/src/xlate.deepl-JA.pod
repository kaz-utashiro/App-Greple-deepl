=encoding utf-8

=head1 NAME

App::Greple::xlate - greple 用の翻訳サポートモジュール

=head1 SYNOPSIS

    greple -Mxlate -e ENGINE --xlate pattern target-file

    greple -Mxlate::deepl --xlate pattern target-file

=head1 VERSION

Version 0.29

=head1 DESCRIPTION

B<Greple> B<xlate>モジュールは目的のテキストブロックを見つけ、翻訳されたテキストに置き換えます。現在、DeepL (F<deepl.pm>) と ChatGPT (F<gpt3.pm>) モジュールがバックエンドエンジンとして実装されています。gpt-4 も実験的にサポートされています。

Perlのポッドスタイルで書かれた文書中の通常のテキストブロックを翻訳したい場合は、B<greple>コマンドをC<xlate::deepl>とC<perl>モジュールと一緒に次のように使います：

    greple -Mxlate::deepl -Mperl --pod --re '^(\w.*\n)+' --all foo.pm

このコマンドでは、パターン文字列C<^( \w.*n)+> は英数字で始まる連続行を意味します。このコマンドでは、翻訳される領域が強調表示されます。オプションB<--all>はテキスト全体を表示します。

=for html <p>
<img width="750" src="https://raw.githubusercontent.com/kaz-utashiro/App-Greple-xlate/main/images/select-area.png">
</p>

次に、C<--xlate>オプションを追加して、選択した領域を翻訳します。そして、必要な部分を見つけ、B<deepl>コマンドの出力で置き換えます。

デフォルトでは、原文と翻訳文は L<git(1)> と互換性のある "conflict marker" フォーマットで出力されます。C<ifdef>形式を使えば、L<unifdef(1)>コマンドで簡単に目的の部分を取得できます。出力形式はB<--xlate-format>オプションで指定できます。

=for html <p>
<img width="750" src="https://raw.githubusercontent.com/kaz-utashiro/App-Greple-xlate/main/images/format-conflict.png">
</p>

テキスト全体を翻訳したい場合は、B<--match-all>オプションを使います。これはテキスト全体にマッチするパターンC<(?s).+>を指定するショートカットです。

=head1 OPTIONS

=over 7

=item B<--xlate>

=item B<--xlate-color>

=item B<--xlate-fold>

=item B<--xlate-fold-width>=I<n> (Default: 70)

マッチした領域ごとに翻訳処理を起動します。

このオプションがない場合、B<greple>は通常の検索コマンドとして動作します。したがって、ファイルのどの部分が翻訳の対象となるかを、実際の作業を始める前に確認することができます。

コマンドの結果は標準出力されますので、必要に応じてファイルにリダイレクトするか、L<App::Greple::update>モジュールの使用を検討してください。

B<--xlate>オプションは、B<--xlate-color>オプションをB<--color=never>オプションで呼び出します。

B<--xlate-fold>オプションでは、変換されたテキストを指定した幅で折り返す。デフォルトの幅は70で、B<--xlate-fold-width>オプションで設定することができます。ランイン動作のために4列が確保されているので、1行には最大で74文字が格納できます。

=item B<--xlate-engine>=I<engine>

使用する翻訳エンジンを指定します。C<-Mxlate::deepl>のようにエンジンモジュールを直接指定する場合は、このオプションを使用する必要はありません。

=item B<--xlate-labor>

=item B<--xlabor>

翻訳エンジンを呼び出す代わりに、翻訳エンジンのために働くことが期待されています。翻訳するテキストを準備すると、クリップボードにコピーされます。それをフォームに貼り付け、結果をクリップボードにコピーし、リターンキーを押す。

=item B<--xlate-to> (Default: C<EN-US>)

対象言語を指定します。B<DeepL>エンジンを使っている場合は、C<deepl languages>コマンドで利用可能な言語を得ることができます。

=item B<--xlate-format>=I<format> (Default: C<conflict>)

原文と訳文の出力形式を指定します。

=over 4

=item B<conflict>, B<cm>

オリジナルと変換後のテキストは、L<git(1)> conflict marker フォーマットで表示されます。

    <<<<<<< ORIGINAL
    original text
    =======
    translated Japanese text
    >>>>>>> JA

次のL<sed(1)>コマンドで元のファイルを復元することができます。

    sed -e '/^<<<<<<< /d' -e '/^=======$/,/^>>>>>>> /d'

=item B<ifdef>

オリジナルと変換後のテキストは、L<cpp(1)> C<#ifdef> フォーマットで表示されます。

    #ifdef ORIGINAL
    original text
    #endif
    #ifdef JA
    translated Japanese text
    #endif

B<unifdef>コマンドで日本語テキストのみを取り出すことができます。

    unifdef -UORIGINAL -DJA foo.ja.pm

=item B<space>

元のテキストと変換後のテキストは、1行の空白行で区切られて表示されます。

=item B<xtxt>

フォーマットがC<xtxt>（翻訳文）またはunknownの場合、翻訳文のみが印刷されます。

=back

=item B<--xlate-maxlen>=I<chars> (Default: 0)

APIに一度に送信するテキストの最大長を指定します。既定値は、無料の DeepL アカウント・サービスと同じように、API (B<--xlate>) では 128K、クリップボード・インタフェース (B<--xlate-labor>) では 5000 に設定されています。Pro サービスを使用している場合は、これらの値を変更できます。

=item B<-->[B<no->]B<xlate-progress> (Default: True)

翻訳結果はSTDERR出力にリアルタイムで表示されます。

=item B<--match-all>

ファイルの全テキストを対象範囲に設定します。

=back

=head1 CACHE OPTIONS

B<xlate>モジュールは、各ファイルの翻訳テキストをキャッシュしておき、実行前にそれを読むことで、サーバーへの問い合わせのオーバーヘッドをなくすことができます。デフォルトのキャッシュ戦略C<auto>では、対象ファイルに対してキャッシュファイルが存在する場合のみ、キャッシュデータを保持します。

=over 7

=item --cache-clear

B<--cache-clear>オプションは、キャッシュ管理を開始するか、既存のキャッシュデータをすべてリフレッシュするために使用されます。このオプションを一度実行すると、キャッシュファイルが存在しない場合は新規に作成され、その後は自動的にメンテナンスされます。

=item --xlate-cache=I<strategy>

=over 4

=item C<auto> (Default)

キャッシュファイルが存在する場合は、それを維持します。

=item C<create>

空のキャッシュファイルを作成し、終了します。

=item C<always>, C<yes>, C<1>

対象が通常ファイルである限り、とにかくキャッシュを維持します。

=item C<clear>

キャッシュデータを先にクリアします。

=item C<never>, C<no>, C<0>

キャッシュファイルが存在しても決して使用しないです。

=item C<accumulate>

デフォルトの動作では、未使用のデータはキャッシュファイルから削除されます。削除せずに残しておきたい場合は、C<蓄積>を使用してください。

=back

=back

=head1 COMMAND LINE INTERFACE

リポジトリに含まれるC<xlate>コマンドを使用することで、コマンドラインから本モジュールを簡単に使用することができます。使い方については、C<xlate>のヘルプ情報を参照してください。

=head1 EMACS

EmacsエディタからC<xlate>コマンドを使うには、リポジトリに含まれているF<xlate.el>ファイルを読み込んでください。C<xlate-region>関数は、指定された地域を翻訳します。デフォルトの言語はC<EN-US>で、prefix引数で言語を指定することができます。

=head1 ENVIRONMENT

=over 7

=item DEEPL_AUTH_KEY

DeepLサービス用の認証キーを設定します。

=item OPENAI_API_KEY

OpenAI認証キー。

=back

=head1 INSTALL

=head2 CPANMINUS

    $ cpanm App::Greple::xlate

=head2 TOOLS

DeepLおよびChatGPT用のコマンドラインツールをインストールする必要があります。

L<https://github.com/DeepLcom/deepl-python>

L<https://github.com/tecolicom/App-gpty>

=head1 SEE ALSO

L<App::Greple::xlate>を使用します。

L<App::Greple::xlate::deepl>をインストールします。

L<App::Greple::xlate::gpt3> をインストールしてください。

L<https://hub.docker.com/r/tecolicom/xlate>

=over 7

=item L<https://github.com/DeepLcom/deepl-python>

DeepL の Python ライブラリと CLI コマンド。

=item L<https://github.com/openai/openai-python>

OpenAI Python ライブラリ

=item L<https://github.com/tecolicom/App-gpty>

OpenAIコマンドラインインターフェイス

=item L<App::Greple>

対象テキストパターンの詳細については、B<greple>のマニュアルを参照してください。B<--inside>, B<--outside>, B<--include>, B<--exclude>オプションでマッチング範囲を限定することができます。

=item L<App::Greple::update>

C<-Mupdate>モジュールを用いると、B<greple>コマンドの結果をもとにファイルを修正することができます。

=item L<App::sdif>

B<sdif>を使用すると、B<-V>オプションでコンフリクトマーカー形式を並べて表示することができます。

=back

=head2 ARTICLES

=over 2

=item * L<https://qiita.com/kaz-utashiro/items/1c1a51a4591922e18250>

DeepL APIで必要な部分だけを翻訳して置き換えるGrepleモジュール

=item * L<https://qiita.com/kaz-utashiro/items/a5e19736416ca183ecf6>

DeepL APIモジュールによる15言語のドキュメント生成

=item * L<https://qiita.com/kaz-utashiro/items/1b9e155d6ae0620ab4dd>

DeepL APIによる自動翻訳Docker環境

=back

=head1 AUTHOR

Kazumasa Utashiro

=head1 LICENSE

Copyright © 2023-2024 Kazumasa Utashiro.

This library is free software; you can redistribute it and/or modify
it under the same terms as Perl itself.

=cut
